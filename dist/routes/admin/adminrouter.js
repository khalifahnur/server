"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const passport_1 = __importDefault(require("../../controllers/auth/passport/passport"));
const router = express_1.default.Router();
const AdminSignup = require('../../controllers/auth/admin/signup');
const AdminSignin = require('../../controllers/auth/admin/signin');
const FetchInfo = require("../../controllers/auth/admin/fetchinfo");
const FetchWaiter = require("../../controllers/auth/admin/fetchWaiter");
const DeleteWaiter = require("../../controllers/auth/admin/delete");
const authenticateUser = require("../../middleware/middleware");
const LogoutAdmin = require("../../controllers/auth/admin/logout");
const oauthSignin = require("../../controllers/auth/admin/oauth");
// const AuthController = require("../controllers/AuthController");
// const forgotPsswdController = require("../controllers/ForgotPsswdController");
// const verifyCodeController = require("../controllers/VerifyCodeController");
// const resetPasswordController = require("../controllers/NewPassword")
router.post("/SignUp", AdminSignup);
router.post("/SignIn", AdminSignin);
// router.post("/:userId/updateRestaurantDetails", AuthController.updateRestaurantDetails);
// router.post("/forgot-password",forgotPsswdController.forgotPsswd);
// router.post("/verify-code",verifyCodeController.verifyCode);
// router.post("/reset-password",resetPasswordController.resetPassword);
router.get("/fetchinfo", authenticateUser, FetchInfo);
router.get("/fetch-waiter", authenticateUser, FetchWaiter);
router.delete("/waiter/:id", authenticateUser, DeleteWaiter);
router.post("/logout", authenticateUser, LogoutAdmin);
router.get("/google-auth", passport_1.default.authenticate("google", { scope: ["profile", "email"] }));
router.get("/google-auth/callback", passport_1.default.authenticate("google", { failureRedirect: "/login?error=auth_failed" }), oauthSignin("Google"));
router.get("/x-auth", passport_1.default.authenticate("twitter"));
router.get("/x-auth/callback", passport_1.default.authenticate("twitter", { failureRedirect: "/login?error=auth_failed" }), oauthSignin("X"));
module.exports = router;
